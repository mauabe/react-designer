{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","enter","enterActive","exit","exitActive","Filters","titles","window","LMDirectory","updateName","event","updateFormState","currentName","target","value","updateTitle","currentTitle","updateIntern","isIntern","checked","updateReset","key","display","Directory","state","bind","spec","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  \"use strict\";\n\n  function Person(props){\n    return (\n      <div className=\"person\">\n        <h3>{props.person.name}, {props.person.title} </h3>\n\t\t\t\t<p>\n          <img className=\" size-medium alignright\" src={props.person.img} alt={props.person.img} width=\"300\" height=\"300\"  sizes=\"(max-width: 300px) 100vw, 300px\" />\n          {props.person.bio}\n\t\t\t\t</p>\n      </div>\n    );\n  }\n\n  function People(props){\n    return(\n      <div className=\"results\">\n        <ReactTransitionGroup.TransitionGroup>\n          {props.people.map(function(person){\n            return (\n              <ReactTransitionGroup.CSSTransition  \n              key={person.id} \n              classNames={{\n                enter: \"animated\",\n                enterActive: \"zoomIn\",\n                exit: \"animated\",\n                exitActive: \"zoomOut\"\n              }}\n              timeout={1000}>\n              <Person person={person} />\n              </ReactTransitionGroup.CSSTransition>  \n            );\n          })}\n        </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  function Filters(props){\n    var titles = window.LMDirectory.titles;\n\n    function updateName(event){\n      props.updateFormState({currentName: event.target.value});\n    }\n    function updateTitle(event){\n      props.updateFormState({currentTitle: event.target.value});\n    }\n    function updateIntern(event){\n      props.updateFormState({isIntern: event.target.checked});\n    }\n    function updateReset(){\n      props.updateFormState({\n        currentName: '',\n        currentTitle: '', \n        isIntern: false\n        });\n    }\n\n    return(\n      <form action=\"\" id=\"directory-filters\">\n        <div className=\"group\">\n          <label htmlFor=\"person-name\">Name:</label>\n          <input type=\"text\" name=\"person_name\"  placeholder=\"Name of employee\" id=\"person-name\" value={props.currentName} onChange={updateName}/>\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"person-title\">Job Title:</label>\n          <select name=\"person_title\" id=\"person-title\" value={props.currentTitle} onChange={updateTitle}>\n            <option value=\"\">- Select -</option>\n            {titles.map(function(title){\n              return(\n                <option value={title.key} key={title.key}>\n                  {title.display}\n                </option>\n              );\n            })}\n            </select>\n        </div>\n        <div className=\"group\">\n          <label>\n            <input type=\"checkbox\" value=\"1\" name=\"person_intern\" checked={props.isIntern} onChange={updateIntern}/> Intern\n          </label>\n        </div>\n        <div className=\"group\">\n          <input type=\"reset\" value=\"Reset\" onClick={updateReset}/>\n        </div>\n      </form>\n    );\n  }\n\n\n  class Directory extends React.Component{\n    constructor(props){\n      super(props);\n\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle:\"\",\n        isIntern: false\n      };\n      this.updateFormState = this.updateFormState.bind(this)\n    }\n \n    updateFormState(spec){\n      this.setState(spec, this.updatePeopleList)\n    };\n\n    // search the whole employee list with current filters\n    updatePeopleList() {\n      var filteredPeople = window.LMDirectory.people.filter(\n        function(person) {\n          return (\n            person.intern === this.state.isIntern &&\n            (this.state.currentName === \"\" ||\n              person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !==\n                -1) &&\n            (this.state.currentTitle === \"\" || person.title_cat === this.state.currentTitle)\n          );\n        }.bind(this)\n      );\n    this.setState({\n      people: filteredPeople\n    });\n  }\n\n    render(){\n      return(\n        <div className=\"company-directory\">\n          <h2>Company Directory</h2>\n          <p>Learn more about each person at Leaf & Mortar in this company directory.</p>\n        \n        <Filters currentName={this.state.currentName} currentTitle={this.state.currentTitle} isIntern={this.state.isIntern} updateFormState={this.updateFormState}/>\n\n        <People people={this.state.people} />\n\n        </div>\n      );\n    }  \n  }\n\n  ReactDOM.render(<Directory />, document.getElementById('directory-root'));\n})();\n"]}